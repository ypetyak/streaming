{"ast":null,"code":"import _classCallCheck from \"/Users/ypetyak/Desktop/coding/ReactWorkspace/stream/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ypetyak/Desktop/coding/ReactWorkspace/stream/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ypetyak/Desktop/coding/ReactWorkspace/stream/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ypetyak/Desktop/coding/ReactWorkspace/stream/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ypetyak/Desktop/coding/ReactWorkspace/stream/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ypetyak/Desktop/coding/ReactWorkspace/stream/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nvar StreamDelete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamDelete, _React$Component);\n\n  function StreamDelete() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamDelete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamDelete)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderActions = function () {\n      var id = _this.props.match.params.id;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.deleteStream(id);\n        },\n        className: \"ui button negative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Cancel\"));\n    };\n\n    _this.renderContent = function () {\n      if (!_this.props.stream) {\n        return 'Are you sure you want to delete this stream?';\n      }\n\n      return \"Are you sure you want to delete the stream with title: \".concat(_this.props.stream.title);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamDelete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        title: \"Delete Stream\",\n        text: this.renderContent(),\n        actions: this.renderActions(),\n        onDismiss: function onDismiss() {\n          return history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StreamDelete;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  deleteStream: deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/ypetyak/Desktop/coding/ReactWorkspace/stream/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Link","Modal","history","fetchStream","deleteStream","StreamDelete","renderActions","id","props","match","params","renderContent","stream","title","push","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAMLC,a,GAAgB,YAAM;AAClB,UAAMC,EAAE,GAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAnC;AAEA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKC,KAAL,CAAWJ,YAAX,CAAwBG,EAAxB,CAAN;AAAA,SAAjB;AAAoD,QAAA,SAAS,EAAC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ;AAMH,K;;UAEDI,a,GAAgB,YAAM;AAClB,UAAI,CAAC,MAAKH,KAAL,CAAWI,MAAhB,EAAwB;AACpB,eAAO,8CAAP;AACH;;AAED,8EAAiE,MAAKJ,KAAL,CAAWI,MAAX,CAAkBC,KAAnF;AACH,K;;;;;;;wCArBmB;AACjB,WAAKL,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAA/C;AACF;;;6BAqBW;AACL,aACQ,oBAAC,KAAD;AACI,QAAA,KAAK,EAAC,eADV;AAEI,QAAA,IAAI,EAAE,KAAKI,aAAL,EAFV;AAGI,QAAA,OAAO,EAAE,KAAKL,aAAL,EAHb;AAII,QAAA,SAAS,EAAE;AAAA,iBAAMJ,OAAO,CAACY,IAAR,CAAa,GAAb,CAAN;AAAA,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR;AAQH;;;;EAlCsBhB,KAAK,CAACiB,S;;AAqCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AACHN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBH,EAApC;AADL,GAAP;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEb,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,YAAY,EAAZA;AAAf,CAAlB,CAAP,CAAwDC,YAAxD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n\n componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id)\n }\n\n renderActions = () => {\n     const id = this.props.match.params.id;\n\n     return (\n         <React.Fragment>\n             <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n             <Link to=\"/\" className=\"ui button\">Cancel</Link>\n         </React.Fragment>\n     )\n }\n\n renderContent = () => {\n     if (!this.props.stream) {\n         return 'Are you sure you want to delete this stream?'\n     }\n\n     return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\n }\n\n    render() {\n        return(\n                <Modal\n                    title=\"Delete Stream\"\n                    text={this.renderContent()}\n                    actions={this.renderActions()}\n                    onDismiss={() => history.push('/')}\n                />\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        stream: state.streams[ownProps.match.params.id]\n    }\n}\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}